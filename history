;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(ses-read-cell-history query-replace-history query-replace-from-to-history shell-command-history compile-history command-history pdf-annot-color-history yes-or-no-p-history buffer-name-history minibuffer-history face-name-history extended-command-history file-name-history))
(setq ses-read-cell-history '("4.39"))
(setq query-replace-history '("A" "a"))
(setq shell-command-history '("kramdown -i html -o kramdown" "kramdown"))
(setq compile-history '("g++ -o test test.cpp " "gcc -o test test.cpp " "g++ -o test test.cpp " "g++ "))
(setq command-history '((switch-to-buffer "squadfinder-06.log" nil 'force-same-window) (switch-to-buffer "#squadfinder.log" nil 'force-same-window) (find-file "~/squadfinder-06.log" t) (find-file "~/.config/hexchat/logs/darkmyst/#squadfinder.log" t) (zap-to-char 1 27) (switch-to-buffer "prewrites.org" nil 'force-same-window) (find-file "~/squadfinder-4.log" t) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (insert-char 8212 1 t) (switch-to-buffer "prewrites.org" nil 'force-same-window) (switch-to-buffer "*scratch*" nil 'force-same-window) (insert-char 8212 1 t) (find-file "~/work/Software/csv/fileio.cxx" t) (find-file "~/work/Software/Sandbox/inform/shuffle.inf" t) (find-file "~/work/Software/Sandbox/inform/outof100.inf" t) (find-file "~/work/Software/Sandbox/inform/shakespear.inf" t) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" "unfill-par") (insert-char 8212 1 t) (switch-to-buffer "prewrites.org" nil 'force-same-window) (switch-to-buffer "squadfinder-5.log" nil 'force-same-window) (switch-to-buffer "keys.el" nil 'force-same-window) (switch-to-buffer "melpa.el" nil 'force-same-window) (switch-to-buffer "keys.el" nil 'force-same-window) (execute-extended-command nil "tea-time" "tea-t") (switch-to-buffer "melpa.el" nil 'force-same-window) (switch-to-buffer "keys.el" nil 'force-same-window) (elfeed-org) (execute-extended-command nil "elfeed-org" "elfeed-o") (find-file "~/squadfinder-5.log" t) (find-file "~/.config/hexchat/logs/darkmyst/#squadfinder.log" t) (find-file "~/squadfinder-4.log" t) (find-file "~/squadfinder-3.log" t) (find-file "~/squadfinder-2.log" t) (find-file "~/.config/hexchat/logs/darkmyst/#squadfinder.log" t) (switch-to-buffer "prewrites.org" nil 'force-same-window) (switch-to-buffer "prewrites.org<session04>" nil 'force-same-window) (switch-to-buffer "prewrites.org<session04>" nil 'force-same-window) (switch-to-buffer "squadfinder-4.log" nil 'force-same-window) (kill-buffer "HELLO") (find-file "~/squadfinder-4.log" t) (kill-buffer "install.sh") (kill-buffer "install.sh") (switch-to-buffer "prewrites.org<session04>" nil 'force-same-window) (switch-to-buffer "*Mingus Help*" nil 'force-same-window) (switch-to-buffer "*Mingus*" nil 'force-same-window) (switch-to-buffer "*Mingus Help*" nil 'force-same-window) (switch-to-buffer "prewrites.org<session04>" nil 'force-same-window) (switch-to-buffer "prewrites.org<session01>" nil 'force-same-window) (switch-to-buffer "prewrites.org<session04>" nil 'force-same-window) (switch-to-buffer "prewrites.org<session01>" nil 'force-same-window) (find-file "~/work/Writing/squadfinder/session04/prewrites.org" t) (kill-buffer "session04") (make-directory "~/work/Writing/squadfinder/session04/" t) (execute-extended-command nil "make-directory" "make-d") (find-file "~/work/Writing/squadfinder/session01/../session04/" t) (recover-this-file) (execute-extended-command nil "recover-this-file" "reecover-this-filec") (find-file "~/work/Other/sca-name" t) (count-words-region 1 34546 nil) (execute-extended-command nil "count-words-region" "count-words-r") (kill-buffer "squadfinder.log") (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" nil) (unfill-paragraph) (execute-extended-command nil "unfill-paragraph" "unfill-pa") (find-file "~/work/Software/csv/fileio.cxx" t) (ses-mode) (execute-extended-command nil "ses-mode" "ses-mo") (ses-edit-cell 24 2 4.39) (find-file "~/insurance.ses" t) (replace-string "a" "A" nil (if (use-region-p) (region-beginning)) (if (use-region-p) (region-end)) nil) (execute-extended-command nil "replace-string" "replace-st") (shell-command-on-region 459 3532 "kramdown -i html -o kramdown" '(4) '(4) nil t nil) (shell-command-on-region 459 3120 "kramdown" '(4) '(4) nil t nil) (markdown-export-and-preview) (execute-extended-command nil "markdown-export-and-preview" "markdown-export-a") (find-file "~/work/Websites/cdr255-website/public/dread-1.md" t) (switch-to-buffer "prewrites.org" nil 'force-same-window) (switch-to-buffer "*scratch*" nil 'force-same-window)))
(setq yes-or-no-p-history '("yes" "no" "yes"))
(setq buffer-name-history '("squadfinder-06.log" "#squadfinder.log" "prewrites.org" "*scratch*" "prewrites.org" "squadfinder-5.log" "keys.el" "melpa.el" "keys.el" "melpa.el" "keys.el" "prewrites.org" "prewrites.org<session04>" "squadfinder-4.log" "HELLO" "install.sh" "prewrites.org<session04>" "*Mingus Help*" "*Mingus*" "*Mingus Help*" "prewrites.org<session04>" "prewrites.org<session01>" "prewrites.org<session04>" "prewrites.org<session01>" "session04" "squadfinder.log" "prewrites.org" "*scratch*" "session01" "session01<2>" "npcs.org" "prewrites.org" "orgnoter.org<Org>" "Notes of Org Noter" "Org Noter" "ptn.crochet.cheerful-echinacea.pdf" "Notes of Org Noter" "Org Noter" "orgnoter.org" "Org Noter" "orgnoter.org" "Notes of Org Noter" "ptn.crochet.cheerful-echinacea.pdf" "crochet-patterns.org" "ptn.crochet.cheerful-echinacea-fmt-utf8.txt" "org.el" "*Packages*" "melpa.el" "*Packages*" "melpa.el" "*Packages*" "melpa.el" "org.el" "personal.org"))
(setq minibuffer-history '("em dash" "EM DASH" "em dash" "New Stitches" "Basic Pattern Info" "org-mode-hook" "org-bullets-mode-hook" "org-bullets-mode" "org-modules"))
(setq face-name-history '("default"))
(setq extended-command-history '("unfill-paragraph" "tea-time" "elfeed-org" "make-directory" "recover-this-file" "count-words-region" "unfill-paragraph" "ses-mode" "replace-string" "markdown-export-and-preview" "unfill-paragraph" "mingus-start-daemon" "compile" "org-noter" "doc-view-mode" "org-noter" "org-noter-insert-note" "org-noter" "org-bullets-mode" "customize-face" "org-bullets-mode" "customize-variable" "customize-face"))
(setq file-name-history '("~/squadfinder-06.log" "~/.config/hexchat/logs/darkmyst/#squadfinder.log" "/home/chrissofer/work/Software/Sandbox/Rust/hello/src/main.rs" "~/squadfinder-4.log" "/home/chrissofer" "~/work/Software/csv/fileio.cxx" "~/work/Software/Sandbox/inform/shuffle.inf" "~/work/Software/Sandbox/inform/outof100.inf" "~/work/Software/Sandbox/inform/shakespear.inf" "/home/chrissofer/work/Software/Sandbox/inform/hello.inf" "/home/chrissofer/Downloads/inform-6.33-6.12.1/Makefile" "/home/chrissofer" "~/squadfinder-5.log" "~/.config/hexchat/logs/darkmyst/#squadfinder.log" "~/squadfinder-4.log" "~/squadfinder-3.log" "~/squadfinder-2.log" "~/.config/hexchat/logs/darkmyst/#squadfinder.log" "/home/chrissofer/.config/hexchat/logs/darkmyst/gwynn.log" "~/squadfinder-4.log" "/home/chrissofer/iscan-perfection-v370-bundle-1.0.1.x64.rpm/install.sh" "/home/chrissofer/install.sh" "~/work/Writing/squadfinder/session04/prewrites.org" "~/work/Writing/squadfinder/session04/" "~/work/Writing/squadfinder/session01/../session04/" "~/work/Other/sca-name" "/home/chrissofer/squadfinder.log" "/home/chrissofer/work/Writing/squadfinder/session01/prewrites.org" "~/work/Software/csv/fileio.cxx" "~/insurance.ses" "~/work/Websites/cdr255-website/public/dread-1.md" "/home/chrissofer" "~/work/Writing/squadfinder/session01/npcs.org" "/home/chrissofer/work/Org/crochet/crochet-patterns.org" "~/Downloads/tmp/test.cpp" "/home/chrissofer/Downloads/tmp/Example1.cpp" "/home/chrissofer/Downloads/tmp/Example1." "~/Downloads/ptn.crochet.cheerful-echinacea.pdf" "~/work/Org/orgnoter.org" "~/.emacs.d/melpa.el" "~/.emacs.d/org.el" "/home/chrissofer/nework/org/writing.org" "~/nework/org/writing.org" "/home/chrissofer/nework/" "~/.emacs.d" "/home/chrissofer/nework/"))
(setq org-drill-sm5-optimal-factor-matrix 'nil)
